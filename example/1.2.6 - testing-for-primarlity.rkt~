#lang sicp

(define (square x) (* x x))
  
(define (smallest-divisor n) (find-divisor n 2))
(define (find-divisor n test-divisor)
  (cond ((> (square test-divisor) n) n)
        ((divides? test-divisor n) test-divisor)
        (else (find-divisor n (+ test-divisor 1)))))
(define (divides? a b) (= (remainder b a) 0))

; Order of Growth: O(sqr-root n)
(define (prime? n)
  (= n (smallest-divisor n)))

(prime? 7)
(prime? 9)